{% extends 'OroUIBundle:actions:update.html.twig' %}

{% set web_catalog = entity.webCatalog %}

{% if entity.parentNode is empty %}
    {% set formAction = path('oro_content_node_update_root', { 'id': entity.webCatalog.id }) %}
{% elseif entity.id is empty %}
    {% set formAction = path('oro_content_node_create', { 'id': entity.parentNode.id }) %}
{% else %}
    {% set formAction = path('oro_content_node_update', { 'id': entity.id }) %}
{% endif %}

{% oro_title_set({params : {'%webCatalogName%': web_catalog.name} }) %}

{% block ownerLink %}
    {% if isDesktopVersion() and web_catalog is not null %}
        {% set ownerLink = UI.entityOwnerLink(web_catalog) %}
        <li>{{ ownerLink }}{% placeholder additional_owner_info with {entity: web_catalog} %}</li>
    {% endif %}
{% endblock ownerLink %}

{% block pageHeader %}
    {% if web_catalog.id %}
        {% set breadcrumbs = {
            'entity':      web_catalog,
            'indexPath':   path('oro_web_catalog_index'),
            'indexLabel': 'oro.webcatalog.entity_plural_label'|trans,
            'additional': [
                {
                    'indexPath': path('oro_web_catalog_view', {'id': web_catalog.id}),
                    'indexLabel': web_catalog.name
                }
            ],
            'entityTitle': 'oro.webcatalog.contentnode.entity_plural_label'|trans
        } %}
        {{ parent() }}
    {% endif %}
{% endblock pageHeader %}

{% block navButtons %}
    {{ parent() }}

    {% if entity.parentNode is empty %}
        {% set cancelPath = path('oro_web_catalog_index', { 'id': web_catalog.id }) %}
    {% else %}
        {% set cancelPath = path('oro_content_node_update', { 'id': entity.parentNode.id }) %}
    {% endif %}

    {% if entity.id is not empty and resource_granted('oro_web_catalog_update') %}
        {{ UI.button({
            'path' : path('oro_content_node_create', { 'id': entity.id }),
            'iCss': 'fa-book',
            'aCss': 'btn-primary',
            'label': 'oro.ui.create_entity'|trans({'%entityName%': 'oro.webcatalog.contentnode.entity_label'|trans}),
            'title': 'oro.ui.create_entity'|trans({'%entityName%': 'oro.webcatalog.contentnode.entity_label'|trans})
        }) }}
    {% endif %}

    {{ UI.cancelButton(cancelPath) }}
    {{ UI.saveAndStayButton() }}
{% endblock navButtons %}

{% block content_data %}
    {% set id = 'web-catalog-tree-edit' %}

    {% set formRows = [
        form_row(form.parentNode),
        form_row(form.titles),
        form_row(form.rewriteVariantTitle),
    ] %}

    {% if entity.parentNode is empty %}
        {% set scopes %}
            {{ form_widget(form.scopes) }}
        {% endset %}
    {% else %}
        {% set scopes %}
        <div data-page-component-module="oroui/js/app/components/view-component"
             data-page-component-options="{{ {
                 view: 'orowebcatalog/js/app/views/scope-toggle-view',
                 selectors: {
                     useParentScopeSelector: '#' ~ form.parentScopeUsed.vars.id,
                     scopesSelector: '.scope-elements'
                 }
             }|json_encode }}"
        >
            {{ form_row(form.parentScopeUsed) }}
            <div class="scope-elements">
                {{ form_widget(form.scopes) }}
            </div>
        </div>
        {% endset %}
    {% endif %}

    {% if form.slugPrototypes is defined %}
        {% set formRows = formRows|merge([form_row(form.slugPrototypes)]) %}
    {% endif %}

    {% set dataBlocks = [
        {
            'title': 'oro.webcatalog.sections.general'|trans,
            'class': 'active',
            'subblocks': [{
                'title': '',
                'data': formRows
            }]
        },
        {
            'title': 'oro.webcatalog.sections.use_for'|trans,
            'subblocks': [{
                'title': '',
                'data': [scopes]
            }]
        },
        {
            'title': 'oro.webcatalog.contentvariant.entity_plural_label'|trans,
            'subblocks': [{
                'title': '',
                'data': [form_widget(form.contentVariants)]
            }]
        }
    ] %}

    {% set data = {
        'formErrors': form_errors(form),
        'dataBlocks': dataBlocks
    }%}

    <div class="web-catalog-page-container tree-component-container">
        <div class="page page-tree tree-component">
            {% set nodeId = null %}
            {% if entity.id %}
                {% set nodeId = entity.id %}
            {% elseif entity.parentNode is not empty %}
                {% set nodeId = entity.parentNode.id %}
            {% endif %}
            {% set treeOptions = {
                'key' : 'web-catalog',
                'data' : oro_web_catalog_tree(web_catalog),
                'updateAllowed' : resource_granted('oro_web_catalog_update'),
                'onRootSelectRoute': 'oro_content_node_update',
                'onSelectRoute' : 'oro_content_node_update',
                'onMoveRoute' : 'oro_content_node_move',
                'nodeId': nodeId
            } %}
            {{ UI.renderJsTree(
                {
                    'module': 'orowebcatalog/js/app/components/web-catalog-tree-component',
                    'label': 'oro.webcatalog.contentnode.entity_plural_label'|trans,
                    'treeOptions': treeOptions
                },
                ['expand', 'collapse']
            ) }}
        </div>
    </div>
    <div class="web-catalog-page-data">
        {{ parent() }}
    </div>
{% endblock content_data %}
