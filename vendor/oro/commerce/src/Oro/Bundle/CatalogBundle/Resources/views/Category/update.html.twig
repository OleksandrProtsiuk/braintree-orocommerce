{% extends 'OroUIBundle:actions:update.html.twig' %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}
{% import 'OroUIBundle::macros.html.twig' as UI %}

{% set entityId = entity.id %}
{% set parentCategoryId = entity.parentCategory ? entity.parentCategory.id : null %}

{% if entityId %}
    {% oro_title_set({params : {"%title%": entity.defaultTitle.string} }) %}
{% endif %}

{% set formAction = entityId ? path('oro_catalog_category_update', { 'id': entityId }) : path('oro_catalog_category_create', { 'id': parentCategoryId })  %}

{% block navButtons %}
    {% if entityId %}
        {% if resource_granted('oro_catalog_category_create') %}
            {{ UI.button({
                'path' : path('oro_catalog_category_create', { 'id': entityId }),
                'iCss': 'fa-folder',
                'aCss': 'btn-primary',
                'label': 'oro.ui.create_entity'|trans({'%entityName%': 'oro.catalog.subcategory.entity_label'|trans}),
                'title': 'oro.ui.create_entity'|trans({'%entityName%': 'oro.catalog.subcategory.entity_label'|trans})
            }) }}
        {% endif %}
        {% set canBeDeleted = resource_granted('DELETE', entity) and entityId != rootCategory.id %}
        {% if canBeDeleted %}
            {{ UI.deleteButton({
                'dataUrl': path('oro_api_delete_category', {'id': entityId}),
                'dataRedirect': path('oro_catalog_category_index'),
                'aCss': 'no-hash remove-button',
                'dataId': entityId,
                'id': 'btn-remove-customer',
                'entity_label': 'oro.catalog.category.entity_label'|trans,
            }) }}
        {% endif %}
        {% if resource_granted('oro_catalog_category_create') or canBeDeleted %}
            {{ UI.buttonSeparator() }}
        {% endif %}
    {% endif %}

    {{ UI.cancelButton(path('oro_catalog_category_index')) }}
    {% set html = UI.saveAndStayButton() %}
    {{ UI.dropdownSaveButton({'html': html}) }}
{% endblock navButtons %}

{% block pageHeader %}
    {% if entityId %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('oro_catalog_category_index'),
            'indexLabel': 'oro.catalog.category.entity_plural_label'|trans,
            'entityTitle': entity.defaultTitle.string|default('N/A'|trans)
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.catalog.category.entity_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'category-edit' %}

    {% set dataBlocks = [{
            'title': 'oro.catalog.sections.general'|trans,
            'class': 'active',
            'subblocks': [{
                'title': '',
                'data': [
                    form_widget(form.appendProducts, {'id': 'categoryAppendProducts'}),
                    form_widget(form.removeProducts, {'id': 'categoryRemoveProducts'}),
                    form_row(form.parentCategory),
                    form_row(form.titles),
                    form_row(form.slugPrototypes),
                    form_row(form.shortDescriptions),
                    form_row(form.longDescriptions),
                    form_row(form.smallImage),
                    form_row(form.largeImage)
                ]
            }]
        }]
    %}

    {% set additionalData = [] %}
    {% for child in form.children if child.vars.extra_field is defined and child.vars.extra_field %}
        {% set additionalData = additionalData|merge([form_row(child)]) %}
    {% endfor %}

    {% if additionalData is not empty %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'oro.catalog.sections.additional'|trans,
            'subblocks': [{
                'title': '',
                'useSpan': false,
                'data' : additionalData
            }]
        }] ) %}
    {% endif %}

    {% if resource_granted('oro_product_update') %}
        {% set dataBlocks = dataBlocks|merge([{
            'title' : 'oro.product.entity_plural_label'|trans,
            'subblocks':
            [
                {
                    'title' : null,
                    'useSpan': false,
                    'data' : [dataGrid.renderGrid('category-products-grid', { category_id: entityId }, { cssClass: 'inner-grid' })]
                }
            ]
        }]) %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge([{
        'title': 'oro.catalog.sections.default_options'|trans,
        'subblocks': [{
            'title': '',
            'useSpan': false,
            'data' : [form_widget(form.defaultProductOptions)]
        }]
    }] ) %}

    {% set data = {
        'formErrors': form_errors(form),
        'dataBlocks': dataBlocks
    }%}

    {% set componentOptions = {
        container: 'category-container',
        sidebar: 'category-tree',
        sidebarAlias: 'categories-sidebar',
        widgetAlias: 'category-data--widget',
        widgetContainer: '.category-data'
    } %}

    <div class="category-container tree-component-container"
         data-page-component-module="orodatagrid/js/app/components/grid-sidebar-component"
         data-page-component-options="{{ componentOptions|json_encode }}">
        <div class="category category-tree tree-component">
            <div class="left-panel-header">
                <div class="left-panel-control left-panel-control-maximize">
                    <i class="fa-forward control-maximize"></i>
                </div>
                <div class="left-panel-control left-panel-control-minimize">
                    <i class="fa-backward control-minimize"></i>
                </div>
            </div>
            {% set treeOptions = {
                'key' : 'commerce-category',
                'data' : oro_category_list(),
                'nodeId' : entityId ? entityId : parentCategoryId,
                'updateAllowed' : resource_granted('oro_catalog_category_update'),
                'onSelectRoute' : 'oro_catalog_category_update',
                'onMoveRoute' : 'oro_catalog_category_move'
            } %}

            {{ UI.renderJsTree(
                {
                    'module': 'orocatalog/js/app/components/tree-manage-component',
                    'label': 'oro.catalog.category.entity_plural_label'|trans,
                    'treeOptions': treeOptions
                },
                ['expand', 'collapse']
            ) }}
        </div>
    </div>
    <div class="category-data">
        {{ parent() }}
    </div>
{% endblock content_data %}
